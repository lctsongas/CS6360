SELECT a.actor_id
FROM film_actor fa, actor a
WHERE a.actor_id = fa.actor_id;

-- Actors who have appeared in more than 10 films
SELECT a.actor_id, a.first_name, a.last_name, COUNT(fa.film_id) AS film_count
FROM actor a
JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY a.actor_id, a.first_name, a.last_name
HAVING COUNT(fa.film_id) > 10
ORDER BY COUNT(fa.film_id) DESC;

-- Customers who have rented films from both stores
SELECT
  c.customer_id,
  c.first_name,
  c.last_name
FROM
  customer c
WHERE
  EXISTS (
    SELECT
      1
    FROM
      rental r
      JOIN inventory i ON r.inventory_id = i.inventory_id
      JOIN store s ON i.store_id = s.store_id
    WHERE
      r.customer_id = c.customer_id
      AND s.store_id = 1
  )
  AND EXISTS (
    SELECT
      1
    FROM
      rental r
      JOIN inventory i ON r.inventory_id = i.inventory_id
      JOIN store s ON i.store_id = s.store_id
    WHERE
      r.customer_id = c.customer_id
      AND s.store_id = 2
  );


-- Total revenue and average revenue per customer for each store
WITH store_customer_revenue AS (
  SELECT
    s.store_id,
    c.customer_id,
    SUM(p.amount) AS customer_revenue
  FROM
    payment p
    JOIN rental r ON p.rental_id = r.rental_id
    JOIN customer c ON r.customer_id = c.customer_id
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN store s ON i.store_id = s.store_id
  GROUP BY
    s.store_id,
    c.customer_id
)

SELECT
  store_id,
  COUNT(customer_id) AS total_customers,
  SUM(customer_revenue) AS total_revenue,
  AVG(customer_revenue) AS avg_revenue_per_customer
FROM
  store_customer_revenue
GROUP BY
  store_id;


-- Total number of rentals and average rentals per customer for each store
WITH store_customer_rentals AS (
  SELECT
    s.store_id,
    r.customer_id,
    COUNT(r.rental_id) AS rental_count
  FROM
    rental r
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN store s ON i.store_id = s.store_id
  GROUP BY
    s.store_id,
    r.customer_id
)

SELECT
  store_id,
  COUNT(customer_id) AS total_customers,
  SUM(rental_count) AS total_rentals,
  AVG(rental_count) AS avg_rentals_per_customer
FROM
  store_customer_rentals
GROUP BY
  store_id;


-- Top 10 customers who spend the most per store
WITH customer_store_total_spent AS (
  SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    i.store_id,
    SUM(p.amount) AS total_spent
  FROM
    customer c
    JOIN payment p ON c.customer_id = p.customer_id
    JOIN rental r ON p.rental_id = r.rental_id
    JOIN inventory i ON r.inventory_id = i.inventory_id
  GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name,
    i.store_id
),

customer_store_spent_ranked AS (
  SELECT
    customer_id,
    first_name,
    last_name,
    store_id,
    total_spent,
    RANK() OVER (PARTITION BY store_id ORDER BY total_spent DESC) AS store_rank
  FROM
    customer_store_total_spent
)

SELECT
  customer_id,
  first_name,
  last_name,
  store_id,
  total_spent,
  store_rank
FROM
  customer_store_spent_ranked
WHERE
  store_rank <= 10;



-- Top 10 customers per store
WITH customer_store_rental_counts AS (
  SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    i.store_id,
    COUNT(r.rental_id) AS rental_count
  FROM
    customer c
    JOIN rental r ON c.customer_id = r.customer_id
    JOIN inventory i ON r.inventory_id = i.inventory_id
  GROUP BY
    c.customer_id,
    i.store_id
),

customer_store_rental_ranked AS (
  SELECT
    customer_id,
    first_name,
    last_name,
    store_id,
    rental_count,
    RANK() OVER (PARTITION BY store_id ORDER BY rental_count DESC) AS store_rank
  FROM
    customer_store_rental_counts
)

SELECT
  customer_id,
  first_name,
  last_name,
  store_id,
  rental_count,
  store_rank
FROM
  customer_store_rental_ranked
WHERE
  store_rank <= 10;


-- Top 10 customers who spend the most overall
WITH customer_total_spent AS (
  SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    SUM(p.amount) AS total_spent
  FROM
    customer c
    JOIN payment p ON c.customer_id = p.customer_id
  GROUP BY
    c.customer_id,
    c.first_name,
    c.last_name
)

SELECT
  customer_id,
  first_name,
  last_name,
  total_spent
FROM
  customer_total_spent
ORDER BY
  total_spent DESC
LIMIT 10;


-- Top 10 most rented films
WITH film_rental_counts AS (
  SELECT
    f.film_id,
    f.title,
    COUNT(r.rental_id) AS rental_count
  FROM
    rental r
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN film f ON i.film_id = f.film_id
  GROUP BY
    f.film_id,
    f.title
)

SELECT
  *
FROM
  film_rental_counts
ORDER BY
  rental_count DESC
LIMIT 10;

-- Top 10 overall customers
WITH customer_rental_counts AS (
  SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(r.rental_id) AS rental_count
  FROM
    customer c
    JOIN rental r ON c.customer_id = r.customer_id
  GROUP BY
    c.customer_id
),

customer_rental_ranked AS (
  SELECT
    customer_id,
    first_name,
    last_name,
    rental_count,
    RANK() OVER (ORDER BY rental_count DESC) AS overall_rank
  FROM
    customer_rental_counts
)

SELECT
  customer_id,
  first_name,
  last_name,
  rental_count,
  overall_rank
FROM
  customer_rental_ranked
WHERE
  overall_rank <= 10;


-- Top 5 most popular film categories for each store
WITH store_category_rentals AS (
  SELECT
    s.store_id,
    c.name AS category_name,
    COUNT(r.rental_id) AS rental_count
  FROM
    rental r
    JOIN inventory i ON r.inventory_id = i.inventory_id
    JOIN store s ON i.store_id = s.store_id
    JOIN film f ON i.film_id = f.film_id
    JOIN film_category fc ON f.film_id = fc.film_id
    JOIN category c ON fc.category_id = c.category_id
  GROUP BY
    s.store_id,
    c.name
)

, store_category_rentals_ranked AS (
  SELECT
    store_id,
    category_name,
    rental_count,
    RANK() OVER (PARTITION BY store_id ORDER BY rental_count DESC) AS rental_rank
  FROM
    store_category_rentals
)

SELECT
  *
FROM
  store_category_rentals_ranked
WHERE
  rental_rank <= 5;


-- Total and average rental duration per film category
SELECT
  c.name AS category_name,
  SUM(f.rental_duration) AS total_rental_duration,
  AVG(f.rental_duration) AS avg_rental_duration
FROM
  film f
  JOIN film_category fc ON f.film_id = fc.film_id
  JOIN category c ON fc.category_id = c.category_id
GROUP BY
  c.name;


-- Total revenue per store
SELECT
  s.store_id,
  SUM(p.amount) AS total_revenue
FROM
  payment p
  JOIN staff st ON p.staff_id = st.staff_id
  JOIN store s ON st.store_id = s.store_id
GROUP BY
  s.store_id;